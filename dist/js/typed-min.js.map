{"version":3,"sources":["typed.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","root","factory","exports","module","define","amd","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","_initializerJs","_htmlParserJs","Typed","elementId","options","instance","TypeError","_classCallCheck","this","initializer","load","begin","pause","status","start","stop","typingComplete","toggleBlinking","onStop","arrayPos","typewrite","curString","curStrPos","backspace","onStart","reset","onDestroy","restart","arguments","undefined","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","strPos","curLoop","insertCursor","onReset","_this","shuffleStringsIfNeeded","bindInputFocusEvents","bindFocusEvents","setTimeout","currentElContent","strings","sequence","startDelay","_this2","fadeOut","el","classList","contains","fadeOutClass","remove","humanize","humanizer","typeSpeed","numChars","htmlParser","typeHtmlChars","pauseTime","substr","charAt","test","skip","exec","parseInt","temporaryPause","onTypingPaused","substring","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","onTypingResumed","setPauseStatus","preStringTyped","nextString","_this3","onStringTyped","complete","loop","loopCount","backDelay","_this4","initFadeOut","backSpeed","backSpaceHtmlChars","curStringAtPosition","smartBackspace","stopNum","onLastStringBackspaced","onComplete","isTyping","isBlinking","cursorBlinking","add","speed","Math","round","random","shuffle","sort","_this5","className","fadeOutDelay","str","attr","setAttribute","isInput","contentType","innerHTML","textContent","_this6","addEventListener","e","showCursor","document","createElement","cursorChar","insertBefore","nextSibling","_extends","assign","source","hasOwnProperty","_defaultsJs","_defaultsJs2","__esModule","default","Initializer","self","querySelector","tagName","toLowerCase","elContent","getAttribute","isPaused","map","s","trim","stringsElement","style","display","Array","slice","apply","children","stringsLength","stringEl","push","getCurrentElContent","autoInsertCss","appendAnimationCss","css","type","innerCss","body","appendChild","defaults","Infinity","HTMLParser","curChar","endTag"],"mappings":"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","sourcesContent":["/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.9\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\t/**\n\t * Welcome to Typed.js!\n\t * @param {string} elementId HTML element ID _OR_ HTML element\n\t * @param {object} options options object\n\t * @returns {object} a new Typed object\n\t */\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    _initializerJs.initializer.load(this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  /**\n\t   * Toggle start() and stop() of the Typed instance\n\t   * @public\n\t   */\n\t\n\t  _createClass(Typed, [{\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.pause.status ? this.start() : this.stop();\n\t    }\n\t\n\t    /**\n\t     * Stop typing / backspacing and enable cursor blinking\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Start typing / backspacing after being stopped\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Destroy this instance of Typed\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy(this);\n\t    }\n\t\n\t    /**\n\t     * Reset Typed and optionally restarts\n\t     * @param {boolean} restart\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (this.cursor && this.cursor.parentNode) {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t        this.cursor = null;\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.insertCursor();\n\t        this.options.onReset(this);\n\t        this.begin();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begins the typing animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'begin',\n\t    value: function begin() {\n\t      var _this = this;\n\t\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(this);\n\t      this.insertCursor();\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\n\t      this.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t        } else {\n\t          // Start typing\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t        }\n\t      }, this.startDelay);\n\t    }\n\t\n\t    /**\n\t     * Called for each character typed\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var _this2 = this;\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t      var numChars = 1;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      this.timeout = setTimeout(function () {\n\t        // skip over any HTML chars\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\t\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        if (substr.charAt(0) === '^') {\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            var skip = 1; // skip at least 1\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t            _this2.temporaryPause = true;\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t            // strip out the escape character and pause value so they're not printed\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t            _this2.toggleBlinking(true);\n\t          }\n\t        }\n\t\n\t        // check for skip characters formatted as\n\t        // \"this is a `string to print NOW` ...\"\n\t        if (substr.charAt(0) === '`') {\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t            numChars++;\n\t            if (curStrPos + numChars > curString.length) break;\n\t          }\n\t          // strip out the escape characters and append all the string in between\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t          numChars--;\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        _this2.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          _this2.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos >= curString.length) {\n\t            _this2.doneTyping(curString, curStrPos);\n\t          } else {\n\t            _this2.keepTyping(curString, curStrPos, numChars);\n\t          }\n\t          // end of character pause\n\t          if (_this2.temporaryPause) {\n\t            _this2.temporaryPause = false;\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t          }\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Continue to the next string & begin typing\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos, numChars) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos, this);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      curStrPos += numChars;\n\t      var nextString = curString.substr(0, curStrPos);\n\t      this.replaceText(nextString);\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t\n\t    /**\n\t     * We're done typing all strings\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var _this3 = this;\n\t\n\t      // fires callback function\n\t      this.options.onStringTyped(this.arrayPos, this);\n\t      this.toggleBlinking(true);\n\t      // is this the final string\n\t      if (this.arrayPos === this.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        this.complete();\n\t        // quit if we wont loop back\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      this.timeout = setTimeout(function () {\n\t        _this3.backspace(curString, curStrPos);\n\t      }, this.backDelay);\n\t    }\n\t\n\t    /**\n\t     * Backspaces 1 character at a time\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var _this4 = this;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      this.timeout = setTimeout(function () {\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t        // replace text with base text + typed characters\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\n\t        _this4.replaceText(curStringAtPosition);\n\t\n\t        // if smartBack is enabled\n\t        if (_this4.smartBackspace) {\n\t          // the remaining part of the current string is equal of the same part of the new string\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t            _this4.stopNum = curStrPos;\n\t          } else {\n\t            _this4.stopNum = 0;\n\t          }\n\t        }\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > _this4.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          _this4.backspace(curString, curStrPos);\n\t        } else if (curStrPos <= _this4.stopNum) {\n\t          // if the stop number has been reached, increase\n\t          // array position to next string\n\t          _this4.arrayPos++;\n\t          // When looping, begin at the beginning after backspace complete\n\t          if (_this4.arrayPos === _this4.strings.length) {\n\t            _this4.arrayPos = 0;\n\t            _this4.options.onLastStringBackspaced();\n\t            _this4.shuffleStringsIfNeeded();\n\t            _this4.begin();\n\t          } else {\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t          }\n\t        }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Full animation is complete\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete(this);\n\t      if (this.loop) {\n\t        this.curLoop++;\n\t      } else {\n\t        this.typingComplete = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Has the typing been stopped\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @param {boolean} isTyping\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Toggle the blinking cursor\n\t     * @param {boolean} isBlinking\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(isBlinking) {\n\t      if (!this.cursor) return;\n\t      // if in paused state, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === isBlinking) return;\n\t      this.cursorBlinking = isBlinking;\n\t      if (isBlinking) {\n\t        this.cursor.classList.add('typed-cursor--blink');\n\t      } else {\n\t        this.cursor.classList.remove('typed-cursor--blink');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Speed in MS to type\n\t     * @param {number} speed\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      return Math.round(Math.random() * speed / 2) + speed;\n\t    }\n\t\n\t    /**\n\t     * Shuffle the sequence of the strings array\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds a CSS class to fade out current string\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var _this5 = this;\n\t\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        _this5.arrayPos++;\n\t        _this5.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (_this5.strings.length > _this5.arrayPos) {\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t        } else {\n\t          _this5.typewrite(_this5.strings[0], 0);\n\t          _this5.arrayPos = 0;\n\t        }\n\t      }, this.fadeOutDelay);\n\t    }\n\t\n\t    /**\n\t     * Replaces current text in the HTML element\n\t     * depending on element type\n\t     * @param {string} str\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * If using input elements, bind focus in order to\n\t     * start and stop the animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'bindFocusEvents',\n\t    value: function bindFocusEvents() {\n\t      var _this6 = this;\n\t\n\t      if (!this.isInput) return;\n\t      this.el.addEventListener('focus', function (e) {\n\t        _this6.stop();\n\t      });\n\t      this.el.addEventListener('blur', function (e) {\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\n\t          return;\n\t        }\n\t        _this6.start();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * On init, insert the cursor element\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      if (!this.showCursor) return;\n\t      if (this.cursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\t/**\n\t * Initialize the Typed object\n\t */\n\t\n\tvar Initializer = (function () {\n\t  function Initializer() {\n\t    _classCallCheck(this, Initializer);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'load',\n\t\n\t    /**\n\t     * Load up defaults & options on the Typed instance\n\t     * @param {Typed} self instance of Typed\n\t     * @param {object} options options object\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\n\t     * @private\n\t     */\n\t\n\t    value: function load(self, options, elementId) {\n\t      // chosen element to manipulate text\n\t      if (typeof elementId === 'string') {\n\t        self.el = document.querySelector(elementId);\n\t      } else {\n\t        self.el = elementId;\n\t      }\n\t\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\n\t\n\t      // attribute to type into\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t      self.attr = self.options.attr;\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\t\n\t      // show cursor\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t      // custom cursor\n\t      self.cursorChar = self.options.cursorChar;\n\t\n\t      // Is the cursor blinking\n\t      self.cursorBlinking = true;\n\t\n\t      // text content of element\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t      // html or plain text\n\t      self.contentType = self.options.contentType;\n\t\n\t      // typing speed\n\t      self.typeSpeed = self.options.typeSpeed;\n\t\n\t      // add a delay before typing starts\n\t      self.startDelay = self.options.startDelay;\n\t\n\t      // backspacing speed\n\t      self.backSpeed = self.options.backSpeed;\n\t\n\t      // only backspace what doesn't match the previous string\n\t      self.smartBackspace = self.options.smartBackspace;\n\t\n\t      // amount of time to wait before backspacing\n\t      self.backDelay = self.options.backDelay;\n\t\n\t      // Fade out instead of backspace\n\t      self.fadeOut = self.options.fadeOut;\n\t      self.fadeOutClass = self.options.fadeOutClass;\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t      // variable to check whether typing is currently paused\n\t      self.isPaused = false;\n\t\n\t      // input strings of text\n\t      self.strings = self.options.strings.map(function (s) {\n\t        return s.trim();\n\t      });\n\t\n\t      // div containing strings\n\t      if (typeof self.options.stringsElement === 'string') {\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\n\t      } else {\n\t        self.stringsElement = self.options.stringsElement;\n\t      }\n\t\n\t      if (self.stringsElement) {\n\t        self.strings = [];\n\t        self.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t        var stringsLength = strings.length;\n\t\n\t        if (stringsLength) {\n\t          for (var i = 0; i < stringsLength; i += 1) {\n\t            var stringEl = strings[i];\n\t            self.strings.push(stringEl.innerHTML.trim());\n\t          }\n\t        }\n\t      }\n\t\n\t      // character number position of current string\n\t      self.strPos = 0;\n\t\n\t      // current array position\n\t      self.arrayPos = 0;\n\t\n\t      // index of string to stop backspacing on\n\t      self.stopNum = 0;\n\t\n\t      // Looping logic\n\t      self.loop = self.options.loop;\n\t      self.loopCount = self.options.loopCount;\n\t      self.curLoop = 0;\n\t\n\t      // shuffle the strings\n\t      self.shuffle = self.options.shuffle;\n\t      // the order of strings\n\t      self.sequence = [];\n\t\n\t      self.pause = {\n\t        status: false,\n\t        typewrite: true,\n\t        curString: '',\n\t        curStrPos: 0\n\t      };\n\t\n\t      // When the typing is complete (when not looped)\n\t      self.typingComplete = false;\n\t\n\t      // Set the order in which the strings are typed\n\t      for (var i in self.strings) {\n\t        self.sequence[i] = i;\n\t      }\n\t\n\t      // If there is some text in the element\n\t      self.currentElContent = this.getCurrentElContent(self);\n\t\n\t      self.autoInsertCss = self.options.autoInsertCss;\n\t\n\t      this.appendAnimationCss(self);\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }, {\n\t    key: 'appendAnimationCss',\n\t    value: function appendAnimationCss(self) {\n\t      var cssDataName = 'data-typed-js-css';\n\t      if (!self.autoInsertCss) {\n\t        return;\n\t      }\n\t      if (!self.showCursor && !self.fadeOut) {\n\t        return;\n\t      }\n\t      if (document.querySelector('[' + cssDataName + ']')) {\n\t        return;\n\t      }\n\t\n\t      var css = document.createElement('style');\n\t      css.type = 'text/css';\n\t      css.setAttribute(cssDataName, true);\n\t\n\t      var innerCss = '';\n\t      if (self.showCursor) {\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t      }\n\t      if (self.fadeOut) {\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t      }\n\t      if (css.length === 0) {\n\t        return;\n\t      }\n\t      css.innerHTML = innerCss;\n\t      document.body.appendChild(css);\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tvar initializer = new Initializer();\n\texports.initializer = initializer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Defaults & options\n\t * @returns {object} Typed defaults & options\n\t * @public\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  /**\n\t   * @property {array} strings strings to be typed\n\t   * @property {string} stringsElement ID of element containing string children\n\t   */\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t  stringsElement: null,\n\t\n\t  /**\n\t   * @property {number} typeSpeed type speed in milliseconds\n\t   */\n\t  typeSpeed: 0,\n\t\n\t  /**\n\t   * @property {number} startDelay time before typing starts in milliseconds\n\t   */\n\t  startDelay: 0,\n\t\n\t  /**\n\t   * @property {number} backSpeed backspacing speed in milliseconds\n\t   */\n\t  backSpeed: 0,\n\t\n\t  /**\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n\t   */\n\t  smartBackspace: true,\n\t\n\t  /**\n\t   * @property {boolean} shuffle shuffle the strings\n\t   */\n\t  shuffle: false,\n\t\n\t  /**\n\t   * @property {number} backDelay time before backspacing in milliseconds\n\t   */\n\t  backDelay: 700,\n\t\n\t  /**\n\t   * @property {boolean} fadeOut Fade out instead of backspace\n\t   * @property {string} fadeOutClass css class for fade animation\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n\t   */\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500,\n\t\n\t  /**\n\t   * @property {boolean} loop loop strings\n\t   * @property {number} loopCount amount of loops\n\t   */\n\t  loop: false,\n\t  loopCount: Infinity,\n\t\n\t  /**\n\t   * @property {boolean} showCursor show cursor\n\t   * @property {string} cursorChar character for cursor\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n\t   */\n\t  showCursor: true,\n\t  cursorChar: '|',\n\t  autoInsertCss: true,\n\t\n\t  /**\n\t   * @property {string} attr attribute for typing\n\t   * Ex: input placeholder, value, or just HTML text\n\t   */\n\t  attr: null,\n\t\n\t  /**\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n\t   */\n\t  bindInputFocusEvents: false,\n\t\n\t  /**\n\t   * @property {string} contentType 'html' or 'null' for plaintext\n\t   */\n\t  contentType: 'html',\n\t\n\t  /**\n\t   * All typing is complete\n\t   * @param {Typed} self\n\t   */\n\t  onComplete: function onComplete(self) {},\n\t\n\t  /**\n\t   * Before each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * After each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * During looping, after last string is typed\n\t   * @param {Typed} self\n\t   */\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\t\n\t  /**\n\t   * Typing has been stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\t\n\t  /**\n\t   * Typing has been started after being stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\t\n\t  /**\n\t   * After reset\n\t   * @param {Typed} self\n\t   */\n\t  onReset: function onReset(self) {},\n\t\n\t  /**\n\t   * After stop\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStop: function onStop(arrayPos, self) {},\n\t\n\t  /**\n\t   * After start\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStart: function onStart(arrayPos, self) {},\n\t\n\t  /**\n\t   * After destroy\n\t   * @param {Typed} self\n\t   */\n\t  onDestroy: function onDestroy(self) {}\n\t};\n\t\n\texports['default'] = defaults;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * TODO: These methods can probably be combined somehow\n\t * Parse HTML tags & HTML Characters\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t\n\t    /**\n\t     * Type HTML tags & HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Backspace HTML tags and HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '>' || curChar === ';') {\n\t        var endTag = '';\n\t        if (curChar === '>') {\n\t          endTag = '<';\n\t        } else {\n\t          endTag = '&';\n\t        }\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;"],"file":"typed-min.js"}